// state access constants
APP_XY = 0
GAME = 1
WORD_INDEX = 2
ANSWER = 3
STATUS = 4
INPLAY = 5
USED = 6
RESULTS = 7
STREAK = 8

X = 0
Y = 1

state = (use "./usables/tui.crumb" "./usables/colors.crumb" "./src/elements.crumb" "./src/storage.crumb" {
  // game rules
  valid_words = (use "./usables/valid.crumb" {<- valid_words})
  play_words = (use "./usables/play.crumb" {<- play_words})

  from_storage = (read)

  // app pos
  x = (integer (divide (subtract (columns) app_width) 2)) // center position on x
  y = (integer (divide (subtract (rows) app_height) 2)) // center position on y

  // last word played
  word_index = (integer (get from_storage 2))

  // stats from storage
  stats_results = (map (split (get from_storage 0) ":") { item _ -> <- (integer item)})
  stats_streak = (map (split (get from_storage 1) ":") { item _ -> <- (integer item)})

  // set state
  state = (list
    (list x y) // screen anchor
    0 // the game status: 0 = in play, 1 = win, 2 = lose
    word_index // the index of the played from the list of words
    (get play_words (multiply word_index 6) (add (multiply word_index 6) 5)) // word in play
    (list // board state
      (list " " " " " " " " " ")
      (list " " " " " " " " " ")
      (list " " " " " " " " " ")
      (list " " " " " " " " " ")
      (list " " " " " " " " " ")
      (list " " " " " " " " " ")
    )
    0 // index of line in play
    (list)
    stats_results
    stats_streak
  )

  <- (start state elements void)
})
